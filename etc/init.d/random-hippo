#!/bin/bash

set +e

### BEGIN INIT INFO
# Provides:        random-hippo
# Required-Start:
# Required-Stop:
# Default-Start:   2 3 4 5
# Default-Stop:
# Short-Description: Start random-hippo daemon
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin

. /lib/lsb/init-functions

LEDPORT=18
GPIOON=1
GPIOOFF=0
SLEEPTIME=120

# for testing, change SRC
# for production, it's in /home/pi
if [ $USER == 'pi' ]; then
	SRC=/home/pi
else
	SRC=$(pwd)/home/pi
fi


function random
{
	UNBOUND=$(od -A n -t d -N 3 /dev/urandom)
	echo $(($UNBOUND%$1))
}

function say
{
	# write commands to a temp file, then play it
	# TMPFILE=$(mktemp /tmp/festival-say.XXXXXX)
	# use the . char to briefly pause festival in sentences
	# ESCAPED=$(echo $* | sed -e 's/\"/\\"/g')
        # echo '(voice_cmu_us_slt_arctic_hts)' >> $TMPFILE
	# echo '(SayText "'$ESCAPED'")' >> $TMPFILE
	# echo '(exit)' >> $TMPFILE
	# festival $TMPFILE
	# rm $TMPFILE
	flite -voice slt "$*"
}

function playFacts
{
	say "Here is a fun hippo fact"
	FACTCNT=$(wc -l < $SRC/hippos.txt)
	RSTART=$(random $((FACTCNT+1)))
	echo "Fact: $FACTCNT / $RSTART"
	say $(sed -n $RSTART,$((RSTART+1))p $SRC/hippos.txt)
}

function playJokes
{
	JOKECNT=$(wc -l < $SRC/hippo-jokes.txt)
	say "Here are some hippo jokes to lighten up the mood"

	sleep 0.5
	# pick 8 random jokes, no repeats
	JOKES=($(shuf -i 1-$((JOKECNT+1)) -n 8))
	for JOKE in "${JOKES[@]}" ; do
		# parse the joke and the answer
		JOKETEXT=$(sed -n "$JOKE"p $SRC/hippo-jokes.txt)
		JOKE=$(echo $JOKETEXT | sed 's/Q: \([^?]*\).*/\1/')
		ANS=$(echo $JOKETEXT | sed 's/Q: [^?]*? A: \(.*\)/\1/')
		say "$JOKE"
		sleep 1
		say "$ANS"
		sleep 1
	done
}

MUSIC=1
# this forks or kills the fork for start | stop, otherwise, run!
case $1 in
	start)
		/bin/bash /etc/init.d/random-hippo &
		PID=$!
		echo "$PID" > /var/run/random-hippo
		exit 0
		;;
	stop)
		kill $(cat /var/run/random-hippo)
		killall mpg321 festival audsp
		exit 0
		;;
	nomusic)
		MUSIC=0
		# keep going
		;;
esac

amixer set PCM -- 100%

while (true) ; do
	# turn led on while playing the song
	bash-led $LEDPORT $GPIOON
	if [ $MUSIC -eq 1 ] ; then
		say "Now some music!"
		mpg321 $SRC/hippo-one.mp3 2>&1 | logger
	fi
	bash-led $LEDPORT $GPIOOFF
	echo "Next play in $SLEEPTIME seconds"
	python button-or-sleep.py $SLEEPTIME

	# tell jokes or read facts?
	# set the number to 2 or above, and negate the if to prefer one over the other
	JOKES=$(random 5)
	# jokes 4/5 times
	if [ ! $JOKES -eq 1 ] ; then
		playJokes
	else
		playFacts
	fi
done

