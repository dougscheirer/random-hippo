#!/bin/bash

set +e

### BEGIN INIT INFO
# Provides:        random-hippo
# Required-Start:
# Required-Stop:
# Default-Start:   2 3 4 5
# Default-Stop:
# Short-Description: Start random-hippo daemon
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin

. /lib/lsb/init-functions

LEDPORT=18
BUTTONPORT=23

GPIOON=1
GPIOOFF=0
SLEEPTIME=120
LOGGER=1

# for testing, change SRC
# for production, it's in /home/pi
if [ '$USER' == 'pi' ]; then
	SRC=/home/pi
else
	SRC=$(pwd)/home/pi
fi

echo "SRC: $SRC"

function logit
{
	if [ $LOGGER -eq 0 ] ; then
		echo "$*"
	else
		echo "$*" | logger
	fi
}

function random
{
	UNBOUND=$(od -A n -t d -N 3 /dev/urandom)
	echo $(($UNBOUND%$1))
}

function say
{
	# write the output to a WAV file and play the file
	TMPFILE=$(mktemp /tmp/festival-say.XXXXXX)
	logit "flite -voice slt -o $TMPFILE $*"
	# -o WAV file
	flite -voice slt -o $TMPFILE "$* "
	# use aplay for WAV
	aplay $TMPFILE
	# delete the file
	rm $TMPFILE
}

function playFacts
{
	ALL=$1

	if [ "$ALL" == "0" ] ; then
		while read FACT ; do say "$FACT"; done < $SRC/hippos.txt
		return
	fi

	say "Here is a fun hippo fact"
	FACTCNT=$(wc -l < $SRC/hippos.txt)
	RSTART=$(random $((FACTCNT+1)))
	logit "Fact: $FACTCNT / $RSTART"
	say $(sed -n $RSTART,$((RSTART+1))p $SRC/hippos.txt)
}

function playJokes
{
	JOKECNT=$(wc -l < $SRC/hippo-jokes.txt)
	say "Here are some hippo jokes to lighten up the mood"

	sleep 0.5
	# pick 8 random jokes, no repeats
	ALL=$1

	if [ "$ALL" == "0" ] ; then
		JOKES=($(seq 1 1 $((JOKECNT+1))))
	else
		JOKES=($(shuf -i 1-$((JOKECNT+1)) -n 8))
	fi

	for JOKE in "${JOKES[@]}" ; do
		# parse the joke and the answer
		JOKETEXT=$(sed -n "$JOKE"p $SRC/hippo-jokes.txt)
		JOKE=$(echo $JOKETEXT | sed 's/Q: \([^?]*\).*/\1/')
		ANS=$(echo $JOKETEXT | sed 's/Q: [^?]*? A: \(.*\)/\1/')
		say "$JOKE"
		sleep 1
		say "$ANS"
		sleep 1
	done
}

MUSIC=1
JUSTJOKES=0
JUSTFACTS=0

# this forks or kills the fork for start | stop, otherwise, run!
case $1 in
	start)
		/bin/bash /etc/init.d/random-hippo &
		PID=$!
		echo "$PID" > /var/run/random-hippo
		exit 0
		;;
	stop)
		kill $(cat /var/run/random-hippo)
		killall mpg321 festival audsp
		exit 0
		;;
	nomusic)
		MUSIC=0
		LOGGER=0
		# keep going
		;;
	jokes)
		MUSIC=0
		LOGGER=0
		JUSTJOKES=1
		;;
	facts)
		MUSIC=0
		LOGGER=0
		JUSTFACTS=1
		;;
esac

amixer set PCM -- 100%

while (true) ; do
	hour=$(date +%H)
	playit=0
	if [ $hour -gt 16 -a $hour -lt 22 ] ; then
		playit=1
	fi

	if [ $playit -eq 1 ]; then	
		if [ $MUSIC -eq 1 ] ; then
			# turn led on while playing the song
			bash-led $LEDPORT $GPIOON || say "Error: could not turn on LED"
			say "Now some music!"
			mpg321 $SRC/hippo-one.mp3 2>&1 | logger
			bash-led $LEDPORT $GPIOOFF || say "Error: could not turn off LED"
		fi
	else
		logit "skipping play for time reasons"
	fi

	logit "Next play in $SLEEPTIME seconds"
	button-or-sleep.py $SLEEPTIME $LEDPORT $BUTTONPORT || say "Error: could not find the sleep program"

	if [ $playit -eq 1 ] ; then		
		# tell jokes or read facts?
		if [ $JUSTJOKES -eq 1 ] ; then
			playJokes 0
		elif [ $JUSTFACTS -eq 1 ] ; then
			playFacts 0
		else
			# set the number to 2 or above, and negate the if to prefer one over the other
			JOKES=$(random 3)
			# jokes 4/5 times
			if [ ! $JOKES -eq 1 ] ; then
				playJokes
			else	
				playFacts
			fi
		fi
	fi
done

